{"version":3,"sources":["Pages/Survey.js","Pages/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Survey","useState","lastName","setLastName","firstName","setFirstName","preferredTitle","setPreferredTitle","heightFeet","setHeightFeet","heightInches","setHeightInches","phone","setPhone","address","setAddress","state","setState","zipCode","setZipCode","checkedEmail","setCheckedEmail","checkedPhone","setCheckedPhone","checkedFacebook","setCheckedFacebook","checkedTwitter","setCheckedTwitter","checkedMail","setCheckedMail","checkedVisit","setCheckedVisit","budget","setBudget","email","setEmail","captcha","setCaptcha","tos","setTos","lastNameError","setLastNameError","firstNameError","setFirstNameError","titleError","setTitleError","addressError","setAddressError","stateError","setStateError","zipCodeError","setZipCodeError","emailError","setEmailError","tosError","setTosError","captchaError","setCaptchaError","lnError","fnError","tError","adrError","stError","zipError","emError","toError","capError","history","useNavigate","emailRegex","RegExp","verified","className","Container","fluid","Form","Row","Col","Floating","Control","type","value","placeholder","onChange","e","target","htmlFor","FloatingLabel","label","Select","format","Check","sitekey","href","onClick","preventDefault","length","test","console","log","sessionStorage","setItem","JSON","stringify","checkedArray","push","store","Result","parse","getItem","map","setMapInfo","useEffect","fullAddress","axios","get","params","key","then","results","data","geometry","location","disabled","val","googleMapsApiKey","mapContainerStyle","width","height","center","zoom","icon","path","fillColor","fillOpacity","scale","strokeColor","strokeWeight","animation","position","App","basename","process","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d0ea14.chunk.js","sourcesContent":["import React, { useState} from \"react\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\nimport {Form, Row, Col, Container, FloatingLabel} from \"react-bootstrap\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PhoneInput, {format} from \"react-phone-input-auto-format\";\r\n\r\nimport \"../App.css\"\r\n\r\n\r\nfunction Survey() {\r\n\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [preferredTitle, setPreferredTitle] = useState(\"\");\r\n    const [heightFeet, setHeightFeet] = useState(\"\");\r\n    const [heightInches, setHeightInches] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(\"\");\r\n    const [checkedEmail, setCheckedEmail] = useState(\"\");\r\n    const [checkedPhone, setCheckedPhone] = useState(\"\");\r\n    const [checkedFacebook, setCheckedFacebook] = useState(\"\");\r\n    const [checkedTwitter, setCheckedTwitter] = useState(\"\");\r\n    const [checkedMail, setCheckedMail] = useState(\"\");\r\n    const [checkedVisit, setCheckedVisit] = useState(\"\");\r\n    const [budget, setBudget] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n    const [tos, setTos] = useState(\"\");\r\n\r\n\r\n    const [lastNameError, setLastNameError] = useState(\"\");\r\n    const [firstNameError, setFirstNameError] = useState(\"\");\r\n    const [titleError, setTitleError] = useState(\"\");\r\n    const [addressError, setAddressError] = useState(\"\");\r\n    const [stateError, setStateError] = useState(\"\");\r\n    const [zipCodeError, setZipCodeError] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [tosError, setTosError] = useState(\"\");\r\n    const [captchaError, setCaptchaError] = useState(\"\");\r\n\r\n    let lnError = false;\r\n    let fnError = false;\r\n    let tError = false;\r\n    let adrError = false;\r\n    let stError = false;\r\n    let zipError = false;\r\n    let emError = false;\r\n    let toError = false;\r\n    let capError = false;\r\n\r\n\r\n\r\n    let history = useNavigate();\r\n\r\n\r\n    const store = () => {\r\n        sessionStorage.setItem(\"lastName\", JSON.stringify(lastName));\r\n        sessionStorage.setItem(\"firstName\", JSON.stringify(firstName));\r\n        sessionStorage.setItem(\"preferredTitle\", JSON.stringify(preferredTitle));\r\n        sessionStorage.setItem(\"heightFeet\", JSON.stringify(heightFeet));\r\n        sessionStorage.setItem(\"heightInches\", JSON.stringify(heightInches));\r\n        sessionStorage.setItem(\"phone\", JSON.stringify(phone));\r\n        sessionStorage.setItem(\"address\", JSON.stringify(address));\r\n        sessionStorage.setItem(\"state\", JSON.stringify(state));\r\n        sessionStorage.setItem(\"zipCode\", JSON.stringify(zipCode));\r\n        sessionStorage.setItem(\"budget\", JSON.stringify(budget));\r\n        sessionStorage.setItem(\"email\", JSON.stringify(email));\r\n        \r\n        var checkedArray = [];\r\n        if(checkedEmail){\r\n            checkedArray.push(checkedEmail);\r\n        }\r\n\r\n        if(checkedPhone){\r\n            checkedArray.push(checkedPhone)\r\n        }\r\n\r\n        if(checkedFacebook){\r\n            checkedArray.push(checkedFacebook);\r\n        }\r\n\r\n        if(checkedTwitter){\r\n            checkedArray.push(checkedTwitter);\r\n        }\r\n\r\n        if(checkedMail){\r\n            checkedArray.push(checkedMail)\r\n        }\r\n\r\n        if(checkedVisit){\r\n            checkedArray.push(checkedVisit)\r\n        }\r\n\r\n        console.log(checkedArray);\r\n\r\n        sessionStorage.setItem(\"checkedItems\", JSON.stringify(checkedArray))\r\n\r\n        //once all values are stored, switches to result page\r\n        history('/result')\r\n\r\n        \r\n    }\r\n\r\n\r\n    const emailRegex = new RegExp(\"^[^@]+@[^@]+.[^@]+$\");\r\n\r\n    let verified = false;\r\n    //checks each input field on submit\r\n    const verification = (e) => {\r\n        if(lastName.length > 40){\r\n            setLastNameError(\"Last name must be less than 40 characters\");\r\n            lnError = true;\r\n        }else if(lastName.length === 0){\r\n            setLastNameError(\"Last name can not be left empty\");\r\n            lnError = true;\r\n        }else{\r\n            setLastNameError(\"\");\r\n            lnError = false;\r\n        }\r\n\r\n        if(firstName.length > 40){\r\n            setFirstNameError(\"First name must be less than 40 characters\");\r\n            fnError = true;\r\n        }else if (firstName.length === 0){\r\n            setFirstNameError(\"First name can not be left empty\")\r\n            fnError = true;\r\n        }else{\r\n            setFirstNameError(\"\");\r\n            fnError = false;\r\n        }\r\n\r\n        if(preferredTitle === \"Please select a title\" || preferredTitle === \"\"){\r\n            setTitleError(\"Please select a title\");\r\n            tError = true;\r\n        }else{\r\n            setTitleError(\"\");\r\n            tError = false;\r\n        }\r\n\r\n        if(address.length > 40){\r\n            setAddressError(\"Please enter an address less than 40 characters\");\r\n            adrError = true;\r\n        }else if(address === \"\"){\r\n            setAddressError(\"Please enter an address\");\r\n            adrError = true;\r\n        }else{\r\n            setAddressError(\"\");\r\n            adrError = false;\r\n        }\r\n\r\n        if(state === \"---\" || state === \"\"){\r\n            setStateError(\"Please select a state\");\r\n            stError = true;\r\n        }else{\r\n            setStateError(\"\");\r\n            stError = false;\r\n        }\r\n\r\n        if(zipCode.length > 5 || zipCode.length <= 0){\r\n            setZipCodeError(\"Please enter a valid zip code\");\r\n            zipError = true;\r\n        }else{\r\n            setZipCodeError(\"\");\r\n            zipError = false;\r\n        }\r\n\r\n        if(!emailRegex.test(email)){\r\n            setEmailError(\"Please enter a valid email\");\r\n            emError = true;\r\n        }else{\r\n            setEmailError(\"\");\r\n            emError = false;\r\n        }\r\n\r\n        if(tos === \"\"){\r\n            setTosError(\"Please agree with the Terms of Service\")\r\n            toError = true;\r\n        }else{\r\n            setTosError(\"\");\r\n            toError = false;\r\n        }\r\n\r\n        if(captcha === \"\"){\r\n            setCaptchaError(\"Please verify that you are human\");\r\n            capError = true;\r\n        }else{\r\n            setCaptchaError(\"\")\r\n            capError = false;\r\n        }\r\n\r\n        if( !lnError && \r\n            !fnError  &&\r\n            !tError &&\r\n            !adrError &&\r\n            !stError &&\r\n            !zipError &&\r\n            !emError &&\r\n            !toError &&\r\n            !capError){\r\n            verified = true;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        verification();\r\n        console.log(verified)\r\n\r\n\r\n        if(verified){\r\n            store();\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"formBody\">\r\n            <div className=\"formContainer\">\r\n                <h1 className=\"divHeader\">CSC 642 848 Fall 2021 Individual Assignment - Andy Ouyang - Data Survey Form</h1>\r\n                <hr/>\r\n                <Container fluid=\"md\" className=\"inputContainer\">\r\n                    <Form>\r\n                        <Row className=\"rowForm\">\r\n                        <p className=\"category-label\">Personal Information </p>\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={lastName}\r\n                                    placeholder=\"Last Name*\"\r\n                                    onChange={e => setLastName(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingLastName\">Last Name*</label>\r\n                                </Form.Floating>\r\n                                {lastNameError ? <p className=\"error\">{lastNameError}</p> : null}\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={firstName}\r\n                                    placeholder=\"First Name*\"\r\n                                    onChange={e => setFirstName(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingFirstName\">First Name*</label>\r\n                                </Form.Floating>\r\n                                {firstNameError ? <p className=\"error\">{firstNameError}</p> : null}\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel label=\"Select a title\">\r\n                                <Form.Select onChange={e => setPreferredTitle(e.target.value)}>\r\n                                    <option>Please select a title</option>\r\n                                    <option>None</option>\r\n                                    <option>Student</option>\r\n                                    <option>Professor</option>\r\n                                    <option>Staff</option>\r\n                                    <option>Retired</option>\r\n                                </Form.Select>\r\n                                {titleError ? <p className=\"error\">{titleError}</p> : null}\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                            <FloatingLabel label=\"Feet\">\r\n                                <Form.Select onChange={e => setHeightFeet(e.target.value)}>\r\n                                    <option>---</option>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    <option>6</option>\r\n                                    <option>7</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel label=\"Inches\">\r\n                                <Form.Select onChange={e => setHeightInches(e.target.value)}>\r\n                                    <option>---</option>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    <option>6</option>\r\n                                    <option>7</option>\r\n                                    <option>8</option>\r\n                                    <option>9</option>\r\n                                    <option>10</option>\r\n                                    <option>11</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                                <PhoneInput \r\n                                    placeholder=\"Phone Number\"\r\n                                    className=\"phoneNumber\"\r\n                                    onChange={e => setPhone(format(e))}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={address}\r\n                                    placeholder=\"Address*\"\r\n                                    onChange={e => setAddress(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingAddress\">Address*</label>\r\n                                </Form.Floating>\r\n                                {addressError ? <p className=\"error\">{addressError}</p> : null}\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel label=\"State*\">\r\n                                <Form.Select onChange={e => setState(e.target.value)}>\r\n                                    <option>---</option>\r\n                                    <option>Alabama</option>\r\n                                    <option>Alaska</option>\r\n                                    <option>Arizona</option>\r\n                                    <option>Arkansas</option>\r\n                                    <option>California</option>\r\n                                    <option>Colorado</option>\r\n                                    <option>Connecticut</option>\r\n                                    <option>Delaware</option>\r\n                                    <option>Florida</option>\r\n                                    <option>Georgia</option>\r\n                                    <option>Hawaii</option>\r\n                                    <option>Idaho</option>\r\n                                    <option>Illinois</option>\r\n                                    <option>Indiana</option>\r\n                                    <option>Iowa</option>\r\n                                    <option>Kansas</option>\r\n                                    <option>Kentucky</option>\r\n                                    <option>Louisiana</option>\r\n                                    <option>Maine</option>\r\n                                    <option>Maryland</option>\r\n                                    <option>Massachusetts</option>\r\n                                    <option>Michigan</option>\r\n                                    <option>Minnesota</option>\r\n                                    <option>Mississippi</option>\r\n                                    <option>Missouri</option>\r\n                                    <option>Montana</option>\r\n                                    <option>Nebraska</option>\r\n                                    <option>Nevada</option>\r\n                                    <option>New Hampshire</option>\r\n                                    <option>New Jersey</option>\r\n                                    <option>New Mexico</option>\r\n                                    <option>New York</option>\r\n                                    <option>North Carolina</option>\r\n                                    <option>North Dakota</option>\r\n                                    <option>Ohio</option>\r\n                                    <option>Oklahoma</option>\r\n                                    <option>Oregon</option>\r\n                                    <option>Pennsylvania</option>\r\n                                    <option>Rhode Island</option>\r\n                                    <option>South Carolina</option>\r\n                                    <option>South Dakota</option>\r\n                                    <option>Tennessee</option>\r\n                                    <option>Texas</option>\r\n                                    <option>Utah</option>\r\n                                    <option>Vermont</option>\r\n                                    <option>Virginia</option>\r\n                                    <option>Washington</option>\r\n                                    <option>West Virginia</option>\r\n                                    <option>Wisconsin</option>\r\n                                    <option>Wyoming</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            {stateError ? <p className=\"error\">{stateError}</p> : null}\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={zipCode}\r\n                                    placeholder=\"Address*\"\r\n                                    onChange={e => setZipCode(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingZipCode\">Zip Code* (11111)</label>\r\n                                </Form.Floating>\r\n                                {zipCodeError ? <p className=\"error\">{zipCodeError}</p> : null}\r\n                            </Col>\r\n                        </Row>\r\n                        <hr/>\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                            <p className=\"services-label\">Select all services you require</p>\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Email\"\r\n                                type=\"checkbox\"\r\n                                value=\"Email \"\r\n                                onChange={e => setCheckedEmail(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Phone\"\r\n                                type=\"checkbox\"\r\n                                value=\"Phone\"\r\n                                onChange={e => setCheckedPhone(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Facebook\"\r\n                                type=\"checkbox\"\r\n                                value=\"Facebook\"\r\n                                onChange={e => setCheckedFacebook(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Email\"\r\n                                type=\"checkbox\"\r\n                                value=\"Twitter \"\r\n                                onChange={e => setCheckedTwitter(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Surface Mail\"\r\n                                type=\"checkbox\"\r\n                                value=\"Mail\"\r\n                                onChange={e => setCheckedMail(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Personal Visit\"\r\n                                type=\"checkbox\"\r\n                                value=\"Visit\"\r\n                                onChange={e => setCheckedVisit(e.target.value)}\r\n                            />\r\n                            </Col>\r\n                            <Col>\r\n                                <p className=\"category-label\">Please select a budget</p>\r\n                                <FloatingLabel label=\"Budget\">\r\n                                    <Form.Select onChange={e => setBudget(e.target.value)}>\r\n                                        <option>---</option>\r\n                                        <option>Less than $50</option>\r\n                                        <option>Between $50 to $100</option>\r\n                                        <option>Above $100</option>\r\n                                    </Form.Select>\r\n                                </FloatingLabel>\r\n                                <p className=\"email\" >Your Email</p>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={email}\r\n                                    placeholder=\"Email*\"\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingEmail\">Email (ex. test@mail.com)</label>\r\n                                </Form.Floating>\r\n                                {emailError ? <p className=\"error\">{emailError}</p> : null}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                            <p className=\"services-label\">Please Verify that you are human</p>\r\n                                <div className=\"captcha\">\r\n                                        <ReCAPTCHA\r\n                                            sitekey=\"6LdaRTUdAAAAADApRMuDpcyGsWgBTkYjUVPcIJaK\"\r\n                                            onChange={e => setCaptcha(true)}\r\n                                        />\r\n                                </div>\r\n                                {captchaError ? <p className=\"error\">{captchaError}</p> : null}\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Check\r\n                                    className=\"services-label\"\r\n                                    label=\"I agree to the Terms of Service\"\r\n                                    type=\"checkbox\"\r\n                                    value=\"tos\"\r\n                                    onChange={e => setTos(e.target.value)}\r\n                                />\r\n                                <a className=\"TOS\" href=\"https://policies.google.com/terms?hl=en-US\">Terms of Service</a>\r\n                                <br></br>\r\n                                {tosError ? <p className=\"error\">{tosError}</p> : null}\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <button onClick={handleSubmit}>Submit</button>\r\n                    </Form>\r\n                </Container>\r\n            </div>         \r\n        </div>\r\n\r\n        \r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Survey;","import React, {useState, useEffect} from \"react\";\r\nimport {Form, Row, Col, Container, FloatingLabel} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\nimport \"../App.css\"\r\n\r\nfunction Result() {\r\n    const lastName = JSON.parse(sessionStorage.getItem(\"lastName\"));\r\n    const firstName = JSON.parse(sessionStorage.getItem(\"firstName\"));\r\n    const preferredTitle = JSON.parse(sessionStorage.getItem(\"preferredTitle\"));\r\n    const heightFeet = JSON.parse(sessionStorage.getItem(\"heightFeet\"));\r\n    const heightInches = JSON.parse(sessionStorage.getItem(\"heightInches\"));\r\n    const phone = JSON.parse(sessionStorage.getItem(\"phone\"));\r\n    const address = JSON.parse(sessionStorage.getItem(\"address\"));\r\n    const state = JSON.parse(sessionStorage.getItem(\"state\"));\r\n    const zipCode = JSON.parse(sessionStorage.getItem(\"zipCode\"));\r\n    const budget = JSON.parse(sessionStorage.getItem(\"budget\"));\r\n    const email = JSON.parse(sessionStorage.getItem(\"email\"));\r\n\r\n    var checkedArray = JSON.parse(sessionStorage.getItem(\"checkedItems\"));\r\n\r\n    //console.log(checkedArray);\r\n    const [map, setMapInfo] = useState({})\r\n\r\n    const containerStyle = {\r\n        width: '600px',\r\n        height: '400px',\r\n      };\r\n\r\n    useEffect(() => {\r\n        let fullAddress = address + \" \" + state + \" \" + zipCode;\r\n        axios.get('https://maps.googleapis.com/maps/api/geocode/json', {\r\n            params: {\r\n                address: fullAddress,\r\n                key: 'AIzaSyAM0R49HN0FF59CQj-rUfX_BaIUmVXsse8'\r\n            }\r\n        })\r\n        .then((results) => {\r\n            //log result data to figure out where to grab data for map location\r\n\r\n            //set map info to the latitude and longitude of searched addressed\r\n            setMapInfo(results.data.results[0].geometry.location);\r\n            console.log(map)\r\n        })\r\n    }, [])\r\n    \r\n    return(\r\n        <div className=\"formBody\">\r\n        <div className=\"formContainer\">\r\n            <h1 className=\"divHeader\">Results Verification Page - Andy Ouyang</h1>\r\n            <hr/>\r\n            <Container fluid=\"md\" className=\"inputContainer\">\r\n                <Form>\r\n                    <Row className=\"rowForm\">\r\n                    <p>Personal Information </p>\r\n                        <Col>\r\n                            <Form.Floating>\r\n                                <Form.Control \r\n                                type=\"text\" \r\n                                value={lastName}\r\n                                disabled\r\n                                />\r\n                                <label htmlFor=\"floatingLastName\">Last Name*</label>\r\n                            </Form.Floating>\r\n                            \r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Floating>\r\n                                <Form.Control \r\n                                type=\"text\" \r\n                                value={firstName}\r\n                                placeholder=\"First Name*\"\r\n                                disabled\r\n                                />\r\n                                <label htmlFor=\"floatingFirstName\">First Name*</label>\r\n                            </Form.Floating>\r\n                        </Col>\r\n                        <Col>\r\n                        <FloatingLabel>\r\n                        <Form.Control \r\n                                type=\"text\" \r\n                                value={preferredTitle}\r\n                                placeholder=\"First Name*\"\r\n                                disabled\r\n                                />\r\n                                <label htmlFor=\"floatingFirstName\">Title</label>\r\n                        </FloatingLabel>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"rowForm\">\r\n                        <Col>\r\n                        <FloatingLabel label=\"Feet\">\r\n                        <Form.Control \r\n                                type=\"text\" \r\n                                value={heightFeet}\r\n                                placeholder=\"First Name*\"\r\n                                disabled\r\n                                />\r\n                                <label htmlFor=\"floatingFirstName\">Feet</label>\r\n                        </FloatingLabel>\r\n                        </Col>\r\n                        <Col>\r\n                        <FloatingLabel>\r\n                        <Form.Control\r\n                                type=\"text\" \r\n                                value={heightInches}\r\n                                placeholder=\"First Name*\"\r\n                                disabled\r\n                                />\r\n                                <label htmlFor=\"floatingFirstName\">Inches*</label>\r\n                        </FloatingLabel>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rowForm\">\r\n                        <Col>\r\n                        <FloatingLabel>\r\n                            <Form.Control \r\n                                    type=\"text\" \r\n                                    value={phone}\r\n                                    placeholder=\"First Name*\"\r\n                                    disabled\r\n                                    />\r\n                                    <label htmlFor=\"floatingFirstName\">Phone Number</label>\r\n                        </FloatingLabel>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rowForm\">\r\n                        <Col>\r\n                            <Form.Floating>\r\n                                <Form.Control \r\n                                type=\"text\" \r\n                                value={address}\r\n                                placeholder=\"Address*\"\r\n                                disabled\r\n                                />\r\n                                <label htmlFor=\"floatingAddress\">Address*</label>\r\n                            </Form.Floating>\r\n                        </Col>\r\n                        <Col>\r\n                        <FloatingLabel>\r\n                            <Form.Control \r\n                                    type=\"text\" \r\n                                    value={state}\r\n                                    placeholder=\"First Name*\"\r\n                                    disabled\r\n                                    />\r\n                                    <label htmlFor=\"floatingFirstName\">State*</label>\r\n                        </FloatingLabel>\r\n                        </Col>\r\n                        <Col>\r\n                        <FloatingLabel>\r\n                            <Form.Control \r\n                                    type=\"text\" \r\n                                    value={zipCode}\r\n                                    placeholder=\"First Name*\"\r\n                                    disabled\r\n                                    />\r\n                                    <label htmlFor=\"floatingFirstName\">Zip Code*</label>\r\n                        </FloatingLabel>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr/>\r\n                    <Row className=\"rowForm\">\r\n                        <Col>\r\n                        <p className=\"services\">Services Selected</p>\r\n                            {checkedArray.map((val,) => {\r\n                                return(\r\n                                    <li className=\"services\">\r\n                                        {val}\r\n                                    </li>\r\n                                )\r\n                            })}\r\n                        </Col>\r\n                        <Col>\r\n                            <p>Selected budget</p>\r\n                        <FloatingLabel>\r\n                            <Form.Control \r\n                                    type=\"text\" \r\n                                    value={budget}\r\n                                    placeholder=\"First Name*\"\r\n                                    disabled\r\n                                    />\r\n                                    <label htmlFor=\"floatingFirstName\">Budget</label>\r\n                        </FloatingLabel>\r\n                            <p className=\"email\" >Your Email</p>\r\n                            <Form.Floating>\r\n                                <Form.Control \r\n                                type=\"text\" \r\n                                value={email}\r\n                                placeholder=\"Email*\"\r\n                                disabled\r\n                                />\r\n                                <label htmlFor=\"floatingEmail\">Email (ex. test@mail.com)</label>\r\n                            </Form.Floating>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"googleMap\">\r\n                        <LoadScript\r\n                            googleMapsApiKey=\"AIzaSyAM0R49HN0FF59CQj-rUfX_BaIUmVXsse8\"\r\n                            >\r\n                            <GoogleMap\r\n                            mapContainerStyle={containerStyle}\r\n                            center={map}\r\n                            zoom={10}\r\n                            >\r\n                            <Marker \r\n                            icon={{\r\n                                path:\r\n                                \"M8 12l-4.7023 2.4721.898-5.236L.3916 5.5279l5.2574-.764L8 0l2.3511 4.764 5.2574.7639-3.8043 3.7082.898 5.236z\",\r\n                                fillColor: \"red\",\r\n                                fillOpacity: 0.9,\r\n                                scale: 2,\r\n                                strokeColor: \"red\",\r\n                                strokeWeight: 2\r\n                            }}\r\n                            animation = 'BOUNCE'\r\n                            key='marker' \r\n                            position={map} \r\n                            />\r\n                            </GoogleMap>\r\n                        </LoadScript>\r\n                    </Row>\r\n                </Form>\r\n            </Container>\r\n        </div>         \r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Result;","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Survey from \"./Pages/Survey\"\nimport Result from \"./Pages/Result\"\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/\" element={<Survey/>}/>\n        <Route path=\"/result\" element={<Result/>}/>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}