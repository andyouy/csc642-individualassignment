{"version":3,"sources":["Pages/Survey.js","Pages/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Survey","useState","lastName","setLastName","firstName","setFirstName","setPreferredTitle","setHeightFeet","setHeightInches","phone","setPhone","address","setAddress","setState","checkedEmail","setCheckedEmail","checkedPhone","setCheckedPhone","checkedFacebook","setCheckedFacebook","checkedTwitter","setCheckedTwitter","checkedMail","setCheckedMail","checkedVisit","setCheckedVisit","setBudget","email","className","Container","fluid","Form","Row","Col","Floating","Control","type","value","placeholder","onChange","e","target","htmlFor","FloatingLabel","label","Select","event","format","Check","sitekey","onClick","preventDefault","console","log","Result","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAkTeA,MAzSf,WAEI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4CJ,mBAAS,IAArD,mBAAuBK,GAAvB,WACA,EAAoCL,mBAAS,IAA7C,mBAAmBM,GAAnB,WACA,EAAwCN,mBAAS,IAAjD,mBAAqBO,GAArB,WACA,EAA0BP,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAA8BT,mBAAS,IAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KACA,EAA0BX,mBAAS,IAAnC,mBAAcY,GAAd,WACA,EAA8BZ,mBAAS,IAAvC,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KACA,EAAwCd,mBAAS,IAAjD,mBAAOe,EAAP,KAAqBC,EAArB,KACA,EAA8ChB,mBAAS,IAAvD,mBAAOiB,EAAP,KAAwBC,EAAxB,KACA,EAA4ClB,mBAAS,IAArD,oBAAOmB,GAAP,MAAuBC,GAAvB,MACA,GAAsCpB,mBAAS,IAA/C,qBAAOqB,GAAP,MAAoBC,GAApB,MACA,GAAwCtB,mBAAS,IAAjD,qBAAOuB,GAAP,MAAqBC,GAArB,MACA,GAA4BxB,mBAAS,IAArC,qBAAeyB,IAAf,aACA,GAA0BzB,mBAAS,IAAnC,qBAAO0B,GAAP,MAiBA,OAjBA,MAkBI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,YAAd,0FACA,uBACA,cAACC,EAAA,EAAD,CAAWC,MAAM,KAAKF,UAAU,iBAAhC,SACI,eAACG,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACA,sDACI,cAACK,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,SAAN,WACI,cAACH,EAAA,EAAKI,QAAN,CACAC,KAAK,OACLC,MAAOnC,EACPoC,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIrC,EAAYqC,EAAEC,OAAOJ,UAEpC,uBAAOK,QAAQ,mBAAf,6BAGR,cAACT,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,SAAN,WACI,cAACH,EAAA,EAAKI,QAAN,CACAC,KAAK,OACLC,MAAOjC,EACPkC,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAInC,EAAamC,EAAEC,OAAOJ,UAErC,uBAAOK,QAAQ,oBAAf,8BAGR,cAACT,EAAA,EAAD,UACA,cAACU,EAAA,EAAD,CAAeC,MAAM,iBAArB,SACI,eAACb,EAAA,EAAKc,OAAN,CAAaN,SAAU,SAAAC,GAAC,OAAIlC,EAAkBkC,EAAEC,OAAOJ,QAAvD,UACI,2DACA,0CACA,6CACA,+CACA,2CACA,uDAMZ,eAACL,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACI,cAACK,EAAA,EAAD,UACA,cAACU,EAAA,EAAD,CAAeC,MAAM,OAArB,SACI,eAACb,EAAA,EAAKc,OAAN,CAAaN,SAAU,SAAAC,GAAC,OAAIjC,EAAciC,EAAEC,OAAOJ,QAAnD,UACI,yCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,8CAIR,cAACJ,EAAA,EAAD,UACA,cAACU,EAAA,EAAD,CAAeC,MAAM,SAArB,SACI,eAACb,EAAA,EAAKc,OAAN,CAAaN,SAAU,SAAAC,GAAC,OAAIhC,EAAgBgC,EAAEC,OAAOJ,QAArD,UACI,yCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,wCACA,kDAKZ,cAACL,EAAA,EAAD,CAAKJ,UAAU,UAAf,SACI,cAACK,EAAA,EAAD,UACI,cAAC,IAAD,CACIK,YAAY,eACZD,MAAO5B,EACP8B,SAnGL,SAACO,GACxBpC,EAASqC,iBAAOD,KAmGYlB,UAAU,oBAItB,eAACI,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACI,cAACK,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,SAAN,WACI,cAACH,EAAA,EAAKI,QAAN,CACAC,KAAK,OACLC,MAAO1B,EACP2B,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAI5B,EAAW4B,EAAEC,OAAOJ,UAEnC,uBAAOK,QAAQ,kBAAf,2BAGR,cAACT,EAAA,EAAD,UACA,cAACU,EAAA,EAAD,CAAeC,MAAM,SAArB,SACI,eAACb,EAAA,EAAKc,OAAN,CAAaN,SAAU,SAAAC,GAAC,OAAI3B,EAAS2B,EAAEC,OAAOJ,QAA9C,UACI,yCACA,6CACA,4CACA,6CACA,8CACA,gDACA,8CACA,iDACA,8CACA,6CACA,6CACA,4CACA,2CACA,8CACA,6CACA,0CACA,4CACA,8CACA,+CACA,2CACA,8CACA,mDACA,8CACA,+CACA,iDACA,8CACA,6CACA,8CACA,4CACA,mDACA,gDACA,gDACA,8CACA,oDACA,kDACA,0CACA,8CACA,4CACA,kDACA,kDACA,oDACA,kDACA,+CACA,2CACA,0CACA,6CACA,8CACA,gDACA,mDACA,+CACA,oDAIR,cAACJ,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,SAAN,WACI,cAACH,EAAA,EAAKI,QAAN,CACAC,KAAK,OACLC,MAAO1B,EACP2B,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAI5B,EAAW4B,EAAEC,OAAOJ,UAEnC,uBAAOK,QAAQ,kBAAf,uCAIZ,uBACA,eAACV,EAAA,EAAD,CAAKJ,UAAU,UAAf,UACI,eAACK,EAAA,EAAD,WACA,mBAAGL,UAAU,WAAb,6CACA,cAACG,EAAA,EAAKiB,MAAN,CACIpB,UAAU,WACVgB,MAAM,QACNR,KAAK,WACLC,MAAM,SACNE,SAAU,SAAAC,GAAC,OAAIzB,EAAgByB,EAAEC,OAAOJ,UAE5C,cAACN,EAAA,EAAKiB,MAAN,CACIpB,UAAU,WACVgB,MAAM,QACNR,KAAK,WACLC,MAAM,QACNE,SAAU,SAAAC,GAAC,OAAIvB,EAAgBuB,EAAEC,OAAOJ,UAE5C,cAACN,EAAA,EAAKiB,MAAN,CACIpB,UAAU,WACVgB,MAAM,WACNR,KAAK,WACLC,MAAM,WACNE,SAAU,SAAAC,GAAC,OAAIrB,EAAmBqB,EAAEC,OAAOJ,UAE/C,cAACN,EAAA,EAAKiB,MAAN,CACIpB,UAAU,WACVgB,MAAM,QACNR,KAAK,WACLC,MAAM,WACNE,SAAU,SAAAC,GAAC,OAAInB,GAAkBmB,EAAEC,OAAOJ,UAE9C,cAACN,EAAA,EAAKiB,MAAN,CACIpB,UAAU,WACVgB,MAAM,eACNR,KAAK,WACLC,MAAM,OACNE,SAAU,SAAAC,GAAC,OAAIjB,GAAeiB,EAAEC,OAAOJ,UAE3C,cAACN,EAAA,EAAKiB,MAAN,CACIpB,UAAU,WACVgB,MAAM,iBACNR,KAAK,WACLC,MAAM,QACNE,SAAU,SAAAC,GAAC,OAAIf,GAAgBe,EAAEC,OAAOJ,aAG5C,eAACJ,EAAA,EAAD,WACI,uDACA,cAACU,EAAA,EAAD,CAAeC,MAAM,SAArB,SACI,eAACb,EAAA,EAAKc,OAAN,CAAaN,SAAU,SAAAC,GAAC,OAAId,GAAUc,EAAEC,OAAOJ,QAA/C,UACI,yCACA,mDACA,yDACA,2DAKhB,eAACL,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,WACA,mBAAGL,UAAU,WAAb,wBACI,eAACG,EAAA,EAAKG,SAAN,WACI,cAACH,EAAA,EAAKI,QAAN,CACAC,KAAK,OACLC,MAAOV,GACPW,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAI5B,EAAW4B,EAAEC,OAAOJ,UAEnC,uBAAOK,QAAQ,gBAAf,mCAGR,cAACT,EAAA,EAAD,UACA,qBAAKL,UAAU,UAAf,SACQ,cAAC,IAAD,CACIqB,QAAQ,oDAMxB,wBAAQC,QAtQf,SAACV,GACVA,EAAEW,iBACFC,QAAQC,IAAIvC,GACZsC,QAAQC,IAAIrC,GACZoC,QAAQC,IAAInC,GACZkC,QAAQC,IAAIjC,IACZgC,QAAQC,IAAI/B,IACZ8B,QAAQC,IAAI7B,KA+PI,6BC3RT8B,MATf,WAEI,OACI,+GCYOC,MAZf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,YCAxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ddcf916.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Form, Row, Col, Button, Container, FloatingLabel} from \"react-bootstrap\"\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PhoneInput, {format} from \"react-phone-input-auto-format\";\r\n\r\nimport \"../App.css\"\r\n\r\n\r\nfunction Survey() {\r\n\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [preferredTitle, setPreferredTitle] = useState(\"\");\r\n    const [heightFeet, setHeightFeet] = useState(\"\");\r\n    const [heightINches, setHeightInches] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(\"\");\r\n    const [checkedEmail, setCheckedEmail] = useState(\"\");\r\n    const [checkedPhone, setCheckedPhone] = useState(\"\");\r\n    const [checkedFacebook, setCheckedFacebook] = useState(\"\");\r\n    const [checkedTwitter, setCheckedTwitter] = useState(\"\");\r\n    const [checkedMail, setCheckedMail] = useState(\"\");\r\n    const [checkedVisit, setCheckedVisit] = useState(\"\");\r\n    const [budget, setBudget] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const phoneNumberHandler = (event) => {\r\n        setPhone(format(event));\r\n    }\r\n\r\n    const temp = (e) => {\r\n        e.preventDefault();\r\n        console.log(checkedEmail)\r\n        console.log(checkedPhone)\r\n        console.log(checkedFacebook)\r\n        console.log(checkedTwitter)\r\n        console.log(checkedMail)\r\n        console.log(checkedVisit)\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"formBody\">\r\n            <div className=\"formContainer\">\r\n                <h1 className=\"divHeader\">CSC 642 848 Fall 2021 Individual Assignment - Andy Ouyang - Data Survey Form</h1>\r\n                <hr/>\r\n                <Container fluid=\"md\" className=\"inputContainer\">\r\n                    <Form>\r\n                        <Row className=\"rowForm\">\r\n                        <p>Personal Information </p>\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={lastName}\r\n                                    placeholder=\"Last Name*\"\r\n                                    onChange={e => setLastName(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingLastName\">Last Name*</label>\r\n                                </Form.Floating>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={firstName}\r\n                                    placeholder=\"First Name*\"\r\n                                    onChange={e => setFirstName(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingFirstName\">First Name*</label>\r\n                                </Form.Floating>\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel label=\"Select a title\">\r\n                                <Form.Select onChange={e => setPreferredTitle(e.target.value)}>\r\n                                    <option>Please select a title</option>\r\n                                    <option>None</option>\r\n                                    <option>Student</option>\r\n                                    <option>Professor</option>\r\n                                    <option>Staff</option>\r\n                                    <option>Retired</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                            <FloatingLabel label=\"Feet\">\r\n                                <Form.Select onChange={e => setHeightFeet(e.target.value)}>\r\n                                    <option>---</option>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    <option>6</option>\r\n                                    <option>7</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel label=\"Inches\">\r\n                                <Form.Select onChange={e => setHeightInches(e.target.value)}>\r\n                                    <option>---</option>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    <option>6</option>\r\n                                    <option>7</option>\r\n                                    <option>8</option>\r\n                                    <option>9</option>\r\n                                    <option>10</option>\r\n                                    <option>11</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                                <PhoneInput \r\n                                    placeholder=\"Phone Number\"\r\n                                    value={phone}\r\n                                    onChange={phoneNumberHandler}\r\n                                    className=\"phoneNumber\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={address}\r\n                                    placeholder=\"Address*\"\r\n                                    onChange={e => setAddress(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingAddress\">Address*</label>\r\n                                </Form.Floating>\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel label=\"State*\">\r\n                                <Form.Select onChange={e => setState(e.target.value)}>\r\n                                    <option>---</option>\r\n                                    <option>Alabama</option>\r\n                                    <option>Alaska</option>\r\n                                    <option>Arizona</option>\r\n                                    <option>Arkansas</option>\r\n                                    <option>California</option>\r\n                                    <option>Colorado</option>\r\n                                    <option>Connecticut</option>\r\n                                    <option>Delaware</option>\r\n                                    <option>Florida</option>\r\n                                    <option>Georgia</option>\r\n                                    <option>Hawaii</option>\r\n                                    <option>Idaho</option>\r\n                                    <option>Illinois</option>\r\n                                    <option>Indiana</option>\r\n                                    <option>Iowa</option>\r\n                                    <option>Kansas</option>\r\n                                    <option>Kentucky</option>\r\n                                    <option>Louisiana</option>\r\n                                    <option>Maine</option>\r\n                                    <option>Maryland</option>\r\n                                    <option>Massachusetts</option>\r\n                                    <option>Michigan</option>\r\n                                    <option>Minnesota</option>\r\n                                    <option>Mississippi</option>\r\n                                    <option>Missouri</option>\r\n                                    <option>Montana</option>\r\n                                    <option>Nebraska</option>\r\n                                    <option>Nevada</option>\r\n                                    <option>New Hampshire</option>\r\n                                    <option>New Jersey</option>\r\n                                    <option>New Mexico</option>\r\n                                    <option>New York</option>\r\n                                    <option>North Carolina</option>\r\n                                    <option>North Dakota</option>\r\n                                    <option>Ohio</option>\r\n                                    <option>Oklahoma</option>\r\n                                    <option>Oregon</option>\r\n                                    <option>Pennsylvania</option>\r\n                                    <option>Rhode Island</option>\r\n                                    <option>South Carolina</option>\r\n                                    <option>South Dakota</option>\r\n                                    <option>Tennessee</option>\r\n                                    <option>Texas</option>\r\n                                    <option>Utah</option>\r\n                                    <option>Vermont</option>\r\n                                    <option>Virginia</option>\r\n                                    <option>Washington</option>\r\n                                    <option>West Virginia</option>\r\n                                    <option>Wisconsin</option>\r\n                                    <option>Wyoming</option>\r\n                                </Form.Select>\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={address}\r\n                                    placeholder=\"Address*\"\r\n                                    onChange={e => setAddress(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingZipCode\">Zip Code* (11111)</label>\r\n                                </Form.Floating>\r\n                            </Col>\r\n                        </Row>\r\n                        <hr/>\r\n                        <Row className=\"rowForm\">\r\n                            <Col>\r\n                            <p className=\"services\">Select all services you require</p>\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Email\"\r\n                                type=\"checkbox\"\r\n                                value=\"Email \"\r\n                                onChange={e => setCheckedEmail(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Phone\"\r\n                                type=\"checkbox\"\r\n                                value=\"Phone\"\r\n                                onChange={e => setCheckedPhone(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Facebook\"\r\n                                type=\"checkbox\"\r\n                                value=\"Facebook\"\r\n                                onChange={e => setCheckedFacebook(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Email\"\r\n                                type=\"checkbox\"\r\n                                value=\"Twitter \"\r\n                                onChange={e => setCheckedTwitter(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Surface Mail\"\r\n                                type=\"checkbox\"\r\n                                value=\"Mail\"\r\n                                onChange={e => setCheckedMail(e.target.value)}\r\n                            />\r\n                            <Form.Check\r\n                                className=\"services\"\r\n                                label=\"Personal Visit\"\r\n                                type=\"checkbox\"\r\n                                value=\"Visit\"\r\n                                onChange={e => setCheckedVisit(e.target.value)}\r\n                            />\r\n                            </Col>\r\n                            <Col>\r\n                                <p>Please select a budget</p>\r\n                                <FloatingLabel label=\"Budget\">\r\n                                    <Form.Select onChange={e => setBudget(e.target.value)}>\r\n                                        <option>---</option>\r\n                                        <option>Less than $50</option>\r\n                                        <option>Between $50 to $100</option>\r\n                                        <option>Above $100</option>\r\n                                    </Form.Select>\r\n                                </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                            <p className=\"services\">Your Email</p>\r\n                                <Form.Floating>\r\n                                    <Form.Control \r\n                                    type=\"text\" \r\n                                    value={email}\r\n                                    placeholder=\"Address*\"\r\n                                    onChange={e => setAddress(e.target.value)}\r\n                                    />\r\n                                    <label htmlFor=\"floatingEmail\">Email@gmail.com</label>\r\n                                </Form.Floating>\r\n                            </Col>\r\n                            <Col>\r\n                            <div className=\"captcha\">\r\n                                    <ReCAPTCHA\r\n                                        sitekey=\"6LdaRTUdAAAAADApRMuDpcyGsWgBTkYjUVPcIJaK\"\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <button onClick={temp}>test</button>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Survey;","import React, { useState, useEffect } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nfunction Result() {\r\n\r\n    return(\r\n        <h1>CSC 642 848 Fall 2021 Individual Assignment - Andy Ouyang - Data Survey Form</h1>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Result;","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport Survey from \"./Pages/Survey\"\nimport Result from \"./Pages/Result\"\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<Survey/>}/>\n        <Route path=\"/survey\" element={<Survey/>}/>\n        <Route path=\"/result\" element={<Result/>}/>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}